Command: ninja all
[1/18] Linking C static library esp-idf/mqtt/libmqtt.a
[2/18] Linking C static library esp-idf/spiffs/libspiffs.a
[3/18] Linking C static library esp-idf/wifi_provisioning/libwifi_provisioning.a
[4/18] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/sensor.c.obj
[5/18] Building C object esp-idf/ssd1306/CMakeFiles/__idf_ssd1306.dir/ssd1306_i2c_new.c.obj
[6/18] Building C object esp-idf/ssd1306/CMakeFiles/__idf_ssd1306.dir/ssd1306_spi.c.obj
[7/18] Building C object esp-idf/ssd1306/CMakeFiles/__idf_ssd1306.dir/ssd1306.c.obj
[8/18] Linking C static library esp-idf/ssd1306/libssd1306.a
[9/18] Linking C static library esp-idf/main/libmain.a
[10/18] Performing configure step for 'bootloader'
-- Minimal build - OFF
-- Building ESP-IDF components for target esp32
-- ESP-TEE is currently supported only on the esp32c6;esp32h2;esp32c5 SoCs
-- Project sdkconfig file /home/pepe/code/embeded/hello-world/sdkconfig
-- Compiler supported targets: xtensa-esp-elf
-- Adding linker script /home/pepe/esp/esp-idf/components/soc/esp32/ld/esp32.peripherals.ld
-- Bootloader project name: "bootloader" version: 1
-- Adding linker script /home/pepe/esp/esp-idf/components/esp_rom/esp32/ld/esp32.rom.ld
-- Adding linker script /home/pepe/esp/esp-idf/components/esp_rom/esp32/ld/esp32.rom.api.ld
-- Adding linker script /home/pepe/esp/esp-idf/components/esp_rom/esp32/ld/esp32.rom.libgcc.ld
-- Adding linker script /home/pepe/esp/esp-idf/components/esp_rom/esp32/ld/esp32.rom.libc-funcs.ld
-- Adding linker script /home/pepe/esp/esp-idf/components/bootloader/subproject/main/ld/esp32/bootloader.rom.ld
-- Components: bootloader bootloader_support efuse esp_app_format esp_bootloader_format esp_common esp_hw_support esp_libc esp_rom esp_system esptool_py freertos hal log main micro-ecc partition_table soc spi_flash xtensa
-- Component paths: /home/pepe/esp/esp-idf/components/bootloader /home/pepe/esp/esp-idf/components/bootloader_support /home/pepe/esp/esp-idf/components/efuse /home/pepe/esp/esp-idf/components/esp_app_format /home/pepe/esp/esp-idf/components/esp_bootloader_format /home/pepe/esp/esp-idf/components/esp_common /home/pepe/esp/esp-idf/components/esp_hw_support /home/pepe/esp/esp-idf/components/esp_libc /home/pepe/esp/esp-idf/components/esp_rom /home/pepe/esp/esp-idf/components/esp_system /home/pepe/esp/esp-idf/components/esptool_py /home/pepe/esp/esp-idf/components/freertos /home/pepe/esp/esp-idf/components/hal /home/pepe/esp/esp-idf/components/log /home/pepe/esp/esp-idf/components/bootloader/subproject/main /home/pepe/esp/esp-idf/components/bootloader/subproject/components/micro-ecc /home/pepe/esp/esp-idf/components/partition_table /home/pepe/esp/esp-idf/components/soc /home/pepe/esp/esp-idf/components/spi_flash /home/pepe/esp/esp-idf/components/xtensa
-- Adding linker script /home/pepe/esp/esp-idf/components/bootloader/subproject/main/ld/esp32/bootloader.ld
-- Configuring done
-- Generating done
-- Build files have been written to: /home/pepe/code/embeded/hello-world/build/bootloader
[11/18] Performing build step for 'bootloader'
[1/1] cd /home/pepe/code/embeded/hello-world/build/bootloader && /home/pepe/.espressif/python_env/idf6.0_py3.10_env/bin/python /home/pepe/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /home/pepe/code/embeded/hello-world/build/bootloader/bootloader.bin
Bootloader binary size 0x6680 bytes. 0x980 bytes (8%) free.
[12/17] Completed 'bootloader'
[13/17] Generating esp-idf/esp_system/ld/sections.ld
[14/17] Building C object CMakeFiles/hello-world.elf.dir/project_elf_src_esp32.c.obj
[15/17] Linking CXX executable hello-world.elf
[16/17] Generating binary image from built executable
esptool.py v4.10.0
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /home/pepe/code/embeded/hello-world/build/hello-world.bin
[17/17] cd /home/pepe/code/embeded/hello-world/build && /home/pepe/.espressif/python_env/idf6.0_py3.10_env/bin/python /home/pepe/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/pepe/code/embeded/hello-world/build/partition_table/partition-table.bin /home/pepe/code/embeded/hello-world/build/hello-world.bin
hello-world.bin binary size 0x2dc70 bytes. Smallest app partition is 0x100000 bytes. 0xd2390 bytes (82%) free.
