Command: ninja all
[1/9] Performing build step for 'bootloader'
[1/1] cd /home/pepe/code/embeded/hello-world/build/bootloader && /home/pepe/.espressif/python_env/idf6.0_py3.10_env/bin/python /home/pepe/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /home/pepe/code/embeded/hello-world/build/bootloader/bootloader.bin
Bootloader binary size 0x6680 bytes. 0x980 bytes (8%) free.
[2/7] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/sensor.c.obj
[3/7] Linking C static library esp-idf/main/libmain.a
[4/7] Generating esp-idf/esp_system/ld/sections.ld
[5/7] Linking CXX executable hello-world.elf
[6/7] Generating binary image from built executable
esptool.py v4.10.0
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /home/pepe/code/embeded/hello-world/build/hello-world.bin
[7/7] cd /home/pepe/code/embeded/hello-world/build && /home/pepe/.espressif/python_env/idf6.0_py3.10_env/bin/python /home/pepe/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/pepe/code/embeded/hello-world/build/partition_table/partition-table.bin /home/pepe/code/embeded/hello-world/build/hello-world.bin
hello-world.bin binary size 0x338f0 bytes. Smallest app partition is 0x100000 bytes. 0xcc710 bytes (80%) free.
